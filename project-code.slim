// before you start
// git pull

// commit your changes
// git add *
// git commit -m "meaningful message"
// git push

 //SLiM model of evolutionary Rescue
initialize() {
    initializeSLiMModelType("nonWF");
    defineConstant("K", 1000); // carrying capacity for the wild population
    defineConstant("Tdelta", 5000);
    // m1 QTL -> Draws its select coef from norm distrib. w/ mean 0.0 and std dev 1.0
    initializeMutationType("m1", 0.5, "n", 0.0, 1.0); 
    m1.convertToSubstitution = F;
    initializeGenomicElementType("g1", m1, 1.0);
    initializeGenomicElement(g1, 0, 99999);
    initializeMutationRate(1e-7);
    initializeRecombinationRate(5e-8);
    initializeSex("A");
    defineConstant("buttton", button);
    // defineConstant("m_12", 1e-4); // migration rate from subpop 1 to subpop 2
    // defineConstant("m_21", 1e-4); // migration rate from subpop 2 to subpop 1
    defineConstant("N1", 1000); // size of subpop1; wild Georgia Population 
    defineConstant("N2", 0); //size of subpop2: OCIC breeding colony
    defineConstant("N3", 0); // size of subpop3: Re-introduced population
    defineConstant("Opt1", 5); // Phenotypic optimum
    defineConstant("0pt2", -5); // Phenotypic optimum of the re-introduced population

}
   
1 { 
    sim.addSubpop("p1", N1);

}   

// TO DO LIST::
//
// Add in something cool about survivability over time (age classes)
// Kill snakes in the first year look into the acclimation effect from Folt et al. (2019)
// Kill GA population
// 

// Variables we will manipulate::
//
// sex ratio of introduced snakes
// Total release number
// Rate of release
// Number of source populations 
// Duration of release

// Variables to track::
// Fitness
// Genetic Diversity
// Population size
// Extinction (How often does it happen and when)
// 
//




//
// think about output to track for the wild subpopulation
// fitness, genotypes,


// Casey start writing code to get the wild population cooking
// Think about output and if you can get a file recording output, great, if not we can figure Wednesday
1:5000 {


    } )
}

// think about how to do the age structures

// Noah - set up the OCIC breeding colony
// Draws 40 random individuals from subpop p1, the original'wild' population
// Runs 10 generations of offspring creation
// Releases 30 snakes/year into the re-introduced/resident population
// Only 80% of those 30 snakes actually survive due to first year mortality
// -> survival_rate = rbinom(1, 1 , 0.8) where 1 = survival and 0 = death
5000 {
        sim.addSubpop("p2", N2);
}
5001:5011 {


}

5010 {
    sim.addSubpop("p3", N3);
}


// // Set up the re-introduced population
fitness(m2) { return 1.0; }

5011:5500 {
// need to set up the migration block to pull 30 individuals from the OCIC population

5011: late() {
inds = sim.subpopulations.individuals;
phenotypes = inds.sumOfMutationsOfType(m2);
inds.fitnessScaling = 1.5 - (phenotypes - 10.0)^2 * 0.005;
if (sim.generation % 100 == 0)
catn(sim.generation + ": Mean phenotype == " + mean(phenotypes));


// 30 snakes per year, .50 sex ratio eventually 
}
